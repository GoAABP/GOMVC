@model GOMVC.Models.SaldosCarteraViewModel

@{
    ViewData["Title"] = "Saldos Cartera";
}

<!-- Contenedor fluid sin padding vertical -->
<div class="container-fluid p-0">
  <!-- Se agrega "m-3" para un margen exterior y se reemplaza "bg-transparent" por "bg-card" -->
  <div class="card card-full-height shadow-lg border-0 bg-card m-3">
    <div class="card-header bg-transparent border-0">
      <h2 class="mb-0">@ViewData["Title"]</h2>
    </div>
    <div class="card-body">
      <div class="row">
        <!-- Panel de filtros y descargas -->
        <div class="col-lg-3 mb-4">
          <div class="card shadow-sm">
            <div class="card-header bg-dark text-white">
              Filtros y Descargas
            </div>
            <div class="card-body">
              <form method="get" asp-action="Index">
                <div class="form-group mb-2">
                  <label for="selectedDate">Select Date:</label>
                  <input type="date" class="form-control" id="selectedDate" name="selectedDate" 
                         value="@(ViewData["SelectedDate"] != null ? ((DateTime)ViewData["SelectedDate"]).ToString("yyyy-MM-dd") : string.Empty)" />
                </div>
                <div class="form-group mb-2">
                  <label for="idCredito">Id_Credito</label>
                  <input type="number" class="form-control" id="idCredito" name="idCredito" value="@ViewData["IdCredito"]" />
                </div>
                <div class="form-group mb-2">
                  <label for="idPersona">Id_Persona</label>
                  <input type="number" class="form-control" id="idPersona" name="idPersona" value="@ViewData["IdPersona"]" />
                </div>
                <div class="form-group mb-3">
                  <label for="nombre">Nombre</label>
                  <input type="text" class="form-control" id="nombre" name="nombre" value="@ViewData["Nombre"]" />
                </div>
                <div class="d-grid gap-2">
                  <button type="submit" class="btn btn-primary">Filter</button>
                  <a href="@Url.Action("Index", "SaldosCartera", new { clearFilters = true })" class="btn btn-secondary">Clear Filters</a>
                </div>
              </form>
              <hr />
              <div class="d-grid gap-2">
                <form method="get" asp-action="DownloadMostRecentData">
                  <button type="submit" class="btn btn-secondary">Download Most Recent Data as CSV</button>
                </form>
                <form asp-action="DownloadDataByDate" method="post">
                  <input type="hidden" name="selectedDate" value="@(ViewData["SelectedDate"] != null ? ((DateTime)ViewData["SelectedDate"]).ToString("yyyy-MM-dd") : string.Empty)" />
                  <button type="submit" class="btn btn-secondary">Download Selected Date as CSV</button>
                </form>
                <form asp-action="DownloadCurrentSelection" method="post">
                  <input type="hidden" name="idCredito" value="@ViewData["IdCredito"]" />
                  <input type="hidden" name="idPersona" value="@ViewData["IdPersona"]" />
                  <input type="hidden" name="nombre" value="@ViewData["Nombre"]" />
                  <input type="hidden" name="selectedDate" value="@(ViewData["SelectedDate"] != null ? ((DateTime)ViewData["SelectedDate"]).ToString("yyyy-MM-dd") : string.Empty)" />
                  <button type="submit" class="btn btn-secondary">Download Current Selection as CSV</button>
                </form>
              </div>
            </div>
          </div>
        </div>

        <!-- Área de la tabla de datos -->
        <div class="col-lg-9">
          <div class="card shadow-sm mb-3">
            <div class="card-body p-0">
              <div class="table-responsive" style="max-height: 400px;">
                <table class="table table-striped table-bordered mb-0">
                  <thead>
                    <tr>
                      <th>Id_Solicitud</th>
                      <th>Id_Credito</th>
                      <th>Id_Persona</th>
                      <th>Referencia</th>
                      <th>Afiliado</th>
                      <th>Nombre</th>
                      <th>Monto</th>
                      <!-- Agrega más columnas según necesites -->
                    </tr>
                  </thead>
                  <tbody>
                    @foreach (var item in Model.SaldosCartera)
                    {
                      <tr>
                        <td>@item.Id_Solicitud</td>
                        <td>@item.Id_Credito</td>
                        <td>@item.Id_Persona</td>
                        <td>@item.Referencia</td>
                        <td>@item.Afiliado</td>
                        <td>@item.Nombre</td>
                        <td>@item.Monto</td>
                        <!-- Agrega más campos según necesites -->
                      </tr>
                    }
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <!-- Controles de paginación -->
          <div class="d-flex justify-content-between align-items-center">
            <div>
              Page @(Model.PageNumber) of @((Model.TotalItems + Model.PageSize - 1) / Model.PageSize)
            </div>
            <div>
              @if (Model.PageNumber > 1)
              {
                  <a asp-action="Index" 
                     asp-route-pageNumber="@(Model.PageNumber - 1)" 
                     asp-route-pageSize="@Model.PageSize" 
                     class="btn btn-secondary">Previous</a>
              }
              @if (Model.PageNumber < (Model.TotalItems + Model.PageSize - 1) / Model.PageSize)
              {
                  <a asp-action="Index" 
                     asp-route-pageNumber="@(Model.PageNumber + 1)" 
                     asp-route-pageSize="@Model.PageSize" 
                     class="btn btn-secondary ms-2">Next</a>
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
