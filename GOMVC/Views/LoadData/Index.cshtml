@model List<string>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Load Data";
}

<div class="container my-4">
    <h2 class="mb-4">Load Data</h2>

    <form id="loadDataForm" asp-action="HandleActivity" asp-controller="LoadData" method="post">
        <div class="mb-3">
            <label for="activityName" class="form-label">Select Activity</label>
            <select id="activityName" name="activityName" class="form-select">
                @foreach (var activity in Model)
                {
                    <option value="@activity">@activity</option>
                }
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Execute</button>
    </form>
</div>

<!-- Contenedor de Notificaciones -->
<div id="notifications" class="notification-container"></div>

@section Scripts {
    <script>
        function addNotification(message, isSuccess) {
            const container = document.getElementById('notifications');
            const notification = document.createElement('div');
            notification.classList.add('notification');
            notification.classList.add(isSuccess ? 'alert-success' : 'alert-danger');
            
            // Botón de cierre
            const closeBtn = document.createElement('button');
            closeBtn.innerHTML = '&times;';
            closeBtn.classList.add('close-btn');
            closeBtn.onclick = function () {
                removeNotification(notification);
            };
            notification.appendChild(closeBtn);
            
            // Mensaje
            const text = document.createElement('div');
            text.textContent = message;
            notification.appendChild(text);
            
            // Agregar la notificación al inicio del contenedor
            if (container.firstChild) {
                container.insertBefore(notification, container.firstChild);
            } else {
                container.appendChild(notification);
            }
            
            // Auto eliminación después de 10 segundos
            //setTimeout(() => {
            //    removeNotification(notification);
            //}, 10000);
        }
        
        function removeNotification(notification) {
            notification.style.animation = 'fadeOut 0.5s forwards';
            setTimeout(() => {
                notification.remove();
            }, 500);
        }
        
        document.getElementById('loadDataForm').addEventListener('submit', function (event) {
            event.preventDefault();
            
            var form = event.target;
            var formData = new FormData(form);
            
            fetch(form.action, {
                method: form.method,
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    return response.text().then(text => {
                        addNotification('Activity processed successfully.', true);
                    });
                } else {
                    return response.text().then(text => {
                        addNotification('Error processing activity: ' + text, false);
                    });
                }
            })
            .catch(error => {
                addNotification('Error processing activity: ' + error.message, false);
            });
        });
    </script>
}
